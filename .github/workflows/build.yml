name: Build and Release APK 

on: 
  push: 
    branches: [ main ] 
  workflow_dispatch: 

jobs: 
  build: 
    runs-on: ubuntu-latest 
    permissions: 
      contents: write  # 仅授予创建发布所需的权限

    steps: 
      # Checkout the code 
      - name: Checkout Code 
        uses: actions/checkout@v3 

      # Set up Java environment and Flutter SDK 
      - name: Set Up Java and Flutter 
        uses: actions/setup-java@v3 
        with: 
          distribution: 'zulu' 
          java-version: '11' 

      - name: Set Up Flutter SDK 
        uses: subosito/flutter-action@v2 
        with: 
          flutter-version: '3.16.0' 
          channel: 'stable' 

      # Cache Flutter dependencies and Android SDK to speed up subsequent builds 
      - name: Cache Flutter Dependencies 
        uses: actions/cache@v3 
        with: 
          path: |
            ~/.pub-cache
            /usr/local/lib/android/sdk
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }} 
          restore-keys: | 
            ${{ runner.os }}-flutter- 

      # Install dependencies and check Flutter environment 
      - name: Install Dependencies and Verify Flutter Setup 
        run: | 
          set -e  # 开启错误处理
          flutter pub get 
          flutter doctor -v 
          echo "Dependencies installed successfully." 

      # Build the APK 
      - name: Build APK 
        run: | 
          set -e  # 开启错误处理
          flutter build apk --release --verbose 
          echo "APK build completed." 
          ls -la build/app/outputs/flutter-apk/  # Verify APK generation 

      # Create a GitHub release (only if build is successful) 
      - name: Create Release 
        uses: softprops/action-gh-release@v1 
        if: success() 
        with: 
          tag_name: v1.0.${{ github.run_number }} 
          name: Release v1.0.${{ github.run_number }} 
          files: build/app/outputs/flutter-apk/app-release.apk 
          body: | 
            保质期提醒应用 v1.0.${{ github.run_number }} 
            
            功能特点： 
            - 添加、编辑和删除商品 
            - 设置生产日期和保质期 
            - 自动计算过期日期 
            - 过期提醒（提前30天、15天、7天、3天和1天） 
            - 按过期时间或名称排序 
            - 直观的状态显示 
            - 统计信息展示 
            
            安装说明： 
            1. 下载 app-release.apk 文件 
            2. 在手机设置中允许"安装未知来源应用" 
            3. 点击下载的APK文件安装 
            4. 首次使用时允许通知权限 
          draft: false 
          prerelease: false 
          generate_release_notes: true 

      # Upload APK as an artifact for later use 
      - name: Upload APK Artifact 
        uses: actions/upload-artifact@v3  # 使用最新版本
        if: success() 
        with: 
          name: app-release 
          path: build/app/outputs/flutter-apk/app-release.apk 

      # Clean up temporary files (if necessary) 
      - name: Clean up Build Artifacts 
        run: | 
          echo "Cleaning up build files." 
          rm -rf build/  # Remove build files to keep the runner clean 
          echo "Build artifacts cleaned."
